#~#~#~#~#~#~#~#~#~#~#~#~#~#
# GLOBAL PIPELINE STAGES  #
#~#~#~#~#~#~#~#~#~#~#~#~#~#
stages:
  - static-code-analysis
  - functional-tests
  - unit-test
  - build-container-image
  - scan
  - release
  - build-helm-package
  - deploy-to-dev
  - deploy-to-stg
  - deploy-to-prod

#~#~#~#~#~#~#~#~#~##
# GLOBAL VARIABLES #
#~#~#~#~#~#~#~#~#~##
variables:
  COMMON_CICD_PROJECT_ID: 480
  COMMON_CICD_PROJECT_NAME: "common-cicd-templates"
  HELM_VERSION: 3.8.2
  HELM_CHART_DIR: charts
  WHITESOURCE_SCANNER_VERSION: latest
  KUBERNETES_VERSION: 1.21.12
  SEMANTIC_RELEASE_VERSION: v3
  TRIVY_VERSION: 0.27.1

#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#
# GLOBAL TRIGGER(s) pipeline conditions #
#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#
# When to trigger a CI pipeline. Any of the following rule conditions may trigger a pipeline
workflow:
  rules:
    # Prevent duplicate pipelines
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    # New commit to the `master` branch - RELEASE Job only
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    # New commit to other branch but `master` - Temporary workaround to help developers
    - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
    # New MR targeting the default `master` branch
    - if: "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH"
    # New semantic versioning Git tag - unleash the beast! (AKA start deployment flow)
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
    # Match commit tag from RN Apps
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'

#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#
# MASTER BRANCH FILE(s) pipeline extensions #
#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#~#
# Include the following `GitlabCI` file extensions to enhance functionality.
# Each file is prefixed with a two-digit number that indicates what job(s) are added to the pipeline as per the aforementioned stages
include:
  - project: ucc-platform/esm/common-cicd-templates
    ref: dev
    file:
      - extensions/01.static-code-analysis.gitlab-ci.yml
      #- extensions/02.functional-test.gitlab-ci.yml
      #- extensions/03.build-and-scan-image.gitlab-ci.yml
      - extensions/04.release.gitlab-ci.yml
      - extensions/05.pack-push-helm-chart.gitlab-ci.yml
      - extensions/06.deployment.gitlab-ci.yml
      - extensions/07.deploy-helm-chart-dev.gitlab-ci.yml
      - extensions/08.deploy-helm-chart-stg.gitlab-ci.yml
      - extensions/09.deploy-helm-chart-prod.gitlab-ci.yml


