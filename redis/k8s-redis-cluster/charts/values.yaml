replicaCount: 6

image:
  repository: redis
  tag: "6.0-alpine"
  command: [ "redis-server" ]
  args: ["/usr/local/etc/redis/redis.conf"]
  pullPolicy: Always

doc:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::078402339249:role/vgsl-unity-global-iam-rl.esm-otel-msk-collector
  name: default #redis-sa  


podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}

#PSP
podSecurityPolicy:
  create: true
  name: "redis-psp"
  spec:
    privileged: false
    fsGroup:
      rule: RunAsAny
    runAsUser:
      rule: RunAsAny
    seLinux:
      rule: RunAsAny
    supplementalGroups:
      rule: RunAsAny
    volumes:
      - secret
      - configMap

rbac:
  create: true


# Container Ports
containerPorts:
  - name: redis
    containerPort: 6379
    protocol: TCP

# Service
service:
  type: ClusterIP
  ports: 
    - name: redis
      port: 6379


ingress:
  enabled: false

resources:
  requests:
    cpu: "1000m"
    memory: "512Mi"
  limits:
    memory: "1Gi"

env:
  ESM_ENV: dev
  KAFKA_BROKERS: b-1.vgsl-unity-development.xxrnxk.c6.kafka.eu-west-1.amazonaws.com:9094,b-2.vgsl-unity-development.xxrnxk.c6.kafka.eu-west-1.amazonaws.com:9094

fileConfigMap:
  - name: redis-node
    source: redis-config/redis-node.conf
    mountPath: /usr/local/etc/redis/redis.conf

autoscaling: {}
nodeSelector: {}
tolerations: []
affinity: {}

secretsMountPath: /var/secrets
secrets:
enableSecretObjects: false
secretObjects:


#RN_INFRA
awsRegion: eu-west-1
