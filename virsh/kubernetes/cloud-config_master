#cloud-config
hostname: $hostname
ssh_authorized_keys:
 - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGdWL+IhJcU38Mek+8SP6vKn4mGExgunYGqsj2dL7SwnkE6+UHnJh56/hzLukLdiTaq7E0YseBMzpL/lJN5des26LaXmxqkOPTJCjPB2XmkRf0MXR3Ze15PR1WqJDeaTZFy8lD1yzifsekcAVN9uhM6hqqQOTbwCELaMKfN/r93XGbpGkYbSK28t1KsfhSD2BRYfledgRb/0mVLeFR+alt+I/87A5DnWpo9sjULL89sRVhBHdmDRzhVmXFIdD7dd4dvXw9w0MGAyibH79kFRISHmhgbKC+CYTApUwIU1ycVLJQiu+j/hfCxeOPGATaKeVkSKA9qglXgNpOSHB1JZiv fibratel@kvm-1 

users:
  - name: fibratel
    groups:
      - sudo
      - docker
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGdWL+IhJcU38Mek+8SP6vKn4mGExgunYGqsj2dL7SwnkE6+UHnJh56/hzLukLdiTaq7E0YseBMzpL/lJN5des26LaXmxqkOPTJCjPB2XmkRf0MXR3Ze15PR1WqJDeaTZFy8lD1yzifsekcAVN9uhM6hqqQOTbwCELaMKfN/r93XGbpGkYbSK28t1KsfhSD2BRYfledgRb/0mVLeFR+alt+I/87A5DnWpo9sjULL89sRVhBHdmDRzhVmXFIdD7dd4dvXw9w0MGAyibH79kFRISHmhgbKC+CYTApUwIU1ycVLJQiu+j/hfCxeOPGATaKeVkSKA9qglXgNpOSHB1JZiv fibratel@kvm-1 


coreos:
  etcd:
      name: $hostname
      # generate a new token for each unique cluster from https://discovery.etcd.io/new
      # discovery: https://discovery.etcd.io/<token>
      #discovery: https://discovery.etcd.io/cda51fbaf3a3c2ec243690af8d834e53
      discovery: $discovery
      # multi-region and multi-cloud deployments need to use $public_ipv4
      addr: $public_ipv4:4001
      peer-addr: $private_ipv4:7001
  fleet:
      public-ip: $public_ipv4
      metadata: region=us-west role=master
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: 00-eth0.network
      runtime: true
      content: |
        [Match]
        Name=eth0
          
        [Network]
        DHCP=none
        DNS=8.8.8.8
        Address=$private_ipv4/24
        Gateway=$gateway
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target
        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/k8s/setup-network-environment 
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: flannel.service
      command: start
      content: |
        [Unit]
        Requires=etcd.service
        After=etcd.service
        After=network-online.target
        Wants=network-online.target
        Description=flannel is an etcd backed overlay network for containers
        [Service]
        Type=notify
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/k8s/flanneld
        ExecStartPre=/usr/bin/chmod +x /opt/bin/flanneld
        ExecStartPre=-/usr/bin/etcdctl mk /coreos.com/network/config '{"Network":"10.244.0.0/16", "Backend": {"Type": "vxlan"}}'
        ExecStart=/opt/bin/flanneld
    - name: kube-apiserver.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=etcd.service
        After=etcd.service
        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v0.8.1/bin/linux/amd64/kube-apiserver
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-apiserver
        ExecStart=/opt/bin/kube-apiserver \
        --address=0.0.0.0 \
        --port=8080 \
        --portal_net=10.243.0.0/16 \
        --etcd_servers=http://127.0.0.1:4001 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-controller-manager.service 
      command: start
      content: |
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v0.8.1/bin/linux/amd64/kube-controller-manager
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-controller-manager
        ExecStart=/opt/bin/kube-controller-manager \
        --master=127.0.0.1:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-scheduler.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v0.8.1/bin/linux/amd64/kube-scheduler
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-scheduler
        ExecStart=/opt/bin/kube-scheduler --master=127.0.0.1:8080
        Restart=always
        RestartSec=10
    - name: kube-register.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Registration Service
        Documentation=https://github.com/kelseyhightower/kube-register
        Requires=kube-apiserver.service
        After=kube-apiserver.service
        Requires=fleet.service
        After=fleet.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/k8s/kube-register
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-register
        ExecStart=/opt/bin/kube-register \
        --metadata=role=node \
        --fleet-endpoint=unix:///var/run/fleet.sock \
        --api-endpoint=http://127.0.0.1:8080
        Restart=always
        RestartSec=10

write_files:
  - path: /etc/environment
    permissions: 0644
    owner: root
    content: |
      COREOS_PUBLIC_IPV4=$public_ipv4
      COREOS_PRIVATE_IPV4=$private_ipv4
